{"ast":null,"code":"var _jsxFileName = \"/Users/yogeshthakur/Ionots/frontend/src/components/CandidateDashboard.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n\n// const CandidateDashboard = () => {\n//     const [projects, setProjects] = useState([]);\n//     const [candidateName, setCandidateName] = useState(\"Name1\"); // Static candidate name for now\n//     const [progress, setProgress] = useState({});\n\n//     // Fetch projects assigned to the candidate\n//     useEffect(() => {\n//         const fetchProjects = async () => {\n//             try {\n//                 const response = await axios.get(`http://localhost:5005/api/projects/${candidateName}`);\n//                 setProjects(response.data);\n//             } catch (err) {\n//                 console.error(\"Error fetching projects:\", err);\n//             }\n//         };\n\n//         fetchProjects();\n//     }, [candidateName]);\n\n//     // Handle progress update\n//     const handleProgressUpdate = async (projectId) => {\n//         const newProgress = progress[projectId] || 0;\n\n//         try {\n//             const response = await axios.put(`http://localhost:5005/api/projects/${projectId}`, {\n//                 progress: parseInt(newProgress),\n//             });\n//             alert(\"Progress updated successfully!\");\n//             setProjects((prevProjects) =>\n//                 prevProjects.map((project) =>\n//                     project._id === projectId ? response.data : project\n//                 )\n//             );\n//         } catch (err) {\n//             console.error(\"Error updating progress:\", err);\n//         }\n//     };\n\n//     return (\n//         <div>\n//             <h1>Candidate Dashboard</h1>\n//             <h2>Welcome, {candidateName}</h2>\n\n//             {projects.length > 0 ? (\n//                 projects.map((project) => (\n//                     <div key={project._id} style={{ border: \"1px solid gray\", margin: \"10px\", padding: \"10px\" }}>\n//                         <h3>{project.title}</h3>\n//                         <p><strong>Description:</strong> {project.description}</p>\n//                         <p><strong>Progress:</strong> {project.progress}%</p>\n//                         <p><strong>Status:</strong> {project.status}</p>\n//                         <p><strong>Score:</strong> {project.score}</p>\n\n//                         <div>\n//                             <input\n//                                 type=\"number\"\n//                                 placeholder=\"Update Progress (0-100)\"\n//                                 value={progress[project._id] || \"\"}\n//                                 onChange={(e) =>\n//                                     setProgress({ ...progress, [project._id]: e.target.value })\n//                                 }\n//                                 min=\"0\"\n//                                 max=\"100\"\n//                             />\n//                             <button onClick={() => handleProgressUpdate(project._id)}>\n//                                 Update Progress\n//                             </button>\n//                         </div>\n//                     </div>\n//                 ))\n//             ) : (\n//                 <p>No projects assigned to you.</p>\n//             )}\n//         </div>\n//     );\n// };\n\n// export default CandidateDashboard;\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CandidateDashboard = () => {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const navigate = useNavigate();\n  const candidateName = localStorage.getItem(\"candidateName\");\n\n  // Redirect if not logged in\n  useEffect(() => {\n    if (!candidateName) {\n      navigate(\"/login\");\n    }\n  }, [navigate, candidateName]);\n  useEffect(() => {\n    const fetchProjects = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5005/api/projects/${candidateName}`);\n        setProjects(response.data);\n      } catch (err) {\n        console.error(\"Error fetching projects:\", err);\n      }\n    };\n    fetchProjects();\n  }, [candidateName]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Welcome, \", candidateName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this), projects.map(project => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: project.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Description: \", project.description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Progress: \", project.progress, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }, this)]\n    }, project._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 9\n  }, this);\n};\n_s(CandidateDashboard, \"+qmmIbucz8aBt+SisVPqLcdslpQ=\", false, function () {\n  return [useNavigate];\n});\n_c = CandidateDashboard;\nexport default CandidateDashboard;\nvar _c;\n$RefreshReg$(_c, \"CandidateDashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","CandidateDashboard","_s","projects","setProjects","navigate","candidateName","localStorage","getItem","fetchProjects","response","get","data","err","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","map","project","title","description","progress","_id","_c","$RefreshReg$"],"sources":["/Users/yogeshthakur/Ionots/frontend/src/components/CandidateDashboard.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n\n// const CandidateDashboard = () => {\n//     const [projects, setProjects] = useState([]);\n//     const [candidateName, setCandidateName] = useState(\"Name1\"); // Static candidate name for now\n//     const [progress, setProgress] = useState({});\n\n//     // Fetch projects assigned to the candidate\n//     useEffect(() => {\n//         const fetchProjects = async () => {\n//             try {\n//                 const response = await axios.get(`http://localhost:5005/api/projects/${candidateName}`);\n//                 setProjects(response.data);\n//             } catch (err) {\n//                 console.error(\"Error fetching projects:\", err);\n//             }\n//         };\n\n//         fetchProjects();\n//     }, [candidateName]);\n\n//     // Handle progress update\n//     const handleProgressUpdate = async (projectId) => {\n//         const newProgress = progress[projectId] || 0;\n\n//         try {\n//             const response = await axios.put(`http://localhost:5005/api/projects/${projectId}`, {\n//                 progress: parseInt(newProgress),\n//             });\n//             alert(\"Progress updated successfully!\");\n//             setProjects((prevProjects) =>\n//                 prevProjects.map((project) =>\n//                     project._id === projectId ? response.data : project\n//                 )\n//             );\n//         } catch (err) {\n//             console.error(\"Error updating progress:\", err);\n//         }\n//     };\n\n//     return (\n//         <div>\n//             <h1>Candidate Dashboard</h1>\n//             <h2>Welcome, {candidateName}</h2>\n\n//             {projects.length > 0 ? (\n//                 projects.map((project) => (\n//                     <div key={project._id} style={{ border: \"1px solid gray\", margin: \"10px\", padding: \"10px\" }}>\n//                         <h3>{project.title}</h3>\n//                         <p><strong>Description:</strong> {project.description}</p>\n//                         <p><strong>Progress:</strong> {project.progress}%</p>\n//                         <p><strong>Status:</strong> {project.status}</p>\n//                         <p><strong>Score:</strong> {project.score}</p>\n\n//                         <div>\n//                             <input\n//                                 type=\"number\"\n//                                 placeholder=\"Update Progress (0-100)\"\n//                                 value={progress[project._id] || \"\"}\n//                                 onChange={(e) =>\n//                                     setProgress({ ...progress, [project._id]: e.target.value })\n//                                 }\n//                                 min=\"0\"\n//                                 max=\"100\"\n//                             />\n//                             <button onClick={() => handleProgressUpdate(project._id)}>\n//                                 Update Progress\n//                             </button>\n//                         </div>\n//                     </div>\n//                 ))\n//             ) : (\n//                 <p>No projects assigned to you.</p>\n//             )}\n//         </div>\n//     );\n// };\n\n// export default CandidateDashboard;\n\n\n\n\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst CandidateDashboard = () => {\n    const [projects, setProjects] = useState([]);\n    const navigate = useNavigate();\n\n    const candidateName = localStorage.getItem(\"candidateName\");\n\n    // Redirect if not logged in\n    useEffect(() => {\n        if (!candidateName) {\n            navigate(\"/login\");\n        }\n    }, [navigate, candidateName]);\n\n    useEffect(() => {\n        const fetchProjects = async () => {\n            try {\n                const response = await axios.get(`http://localhost:5005/api/projects/${candidateName}`);\n                setProjects(response.data);\n            } catch (err) {\n                console.error(\"Error fetching projects:\", err);\n            }\n        };\n\n        fetchProjects();\n    }, [candidateName]);\n\n    return (\n        <div>\n            <h1>Welcome, {candidateName}</h1>\n            {projects.map((project) => (\n                <div key={project._id}>\n                    <h3>{project.title}</h3>\n                    <p>Description: {project.description}</p>\n                    <p>Progress: {project.progress}%</p>\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport default CandidateDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}