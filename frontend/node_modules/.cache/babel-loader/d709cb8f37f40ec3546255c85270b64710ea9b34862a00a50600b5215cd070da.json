{"ast":null,"code":"var _jsxFileName = \"/Users/yogeshthakur/Ionots/frontend/src/components/AdminDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AdminDashboard = () => {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [newProject, setNewProject] = useState({\n    title: '',\n    description: '',\n    candidateName: ''\n  });\n\n  // Fetch all candidate projects\n  const fetchProjects = async () => {\n    try {\n      const response = await axios.get('http://localhost:5005/api/projects/candidates');\n      setProjects(response.data);\n    } catch (error) {\n      console.error('Error fetching projects:', error);\n    }\n  };\n\n  // Fetch all registered users\n  const fetchUsers = async () => {\n    try {\n      const response = await axios.get('http://localhost:5005/api/auth/users');\n      setUsers(response.data);\n    } catch (error) {\n      console.error('Error fetching users:', error);\n    }\n  };\n  useEffect(() => {\n    fetchProjects();\n    fetchUsers();\n  }, []);\n\n  // Assign a project\n  const assignProject = async () => {\n    try {\n      await axios.post('http://localhost:5005/api/projects/assign', newProject);\n      setNewProject({\n        title: '',\n        description: '',\n        candidateName: ''\n      });\n      fetchProjects();\n    } catch (error) {\n      console.error('Error assigning project:', error);\n    }\n  };\n\n  // Handle project acceptance or decline\n  const handleProjectAction = async (projectId, action) => {\n    try {\n      if (action === 'accept') {\n        await axios.put(`http://localhost:5005/api/projects/${projectId}/accept`);\n      } else if (action === 'decline') {\n        await axios.put(`http://localhost:5005/api/projects/${projectId}/decline`);\n      }\n      fetchProjects(); // Refresh project list\n    } catch (error) {\n      console.error('Error handling project action:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Assign a Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Project Title\",\n        value: newProject.title,\n        onChange: e => setNewProject({\n          ...newProject,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Project Description\",\n        value: newProject.description,\n        onChange: e => setNewProject({\n          ...newProject,\n          description: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: newProject.candidateName,\n        onChange: e => setNewProject({\n          ...newProject,\n          candidateName: e.target.value\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Candidate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), users.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: user.name,\n          children: user.name\n        }, user._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: assignProject,\n        children: \"Assign Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Candidate Projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), projects.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No projects assigned yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }, this) : projects.map(project => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: '1px solid gray',\n          padding: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [project.title, \" (Assigned to: \", project.candidateName, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Description: \", project.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Progress: \", project.progress, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Status: \", project.status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Score: \", project.score]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: project.status === \"Pending\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleProjectAction(project._id, 'accept'),\n              children: \"Accept\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleProjectAction(project._id, 'decline'),\n              children: \"Decline\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 29\n        }, this)]\n      }, project._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 25\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n_s(AdminDashboard, \"xfnkcbAQJWLiW3ITPyYMz5tGDDU=\");\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","AdminDashboard","_s","projects","setProjects","users","setUsers","newProject","setNewProject","title","description","candidateName","fetchProjects","response","get","data","error","console","fetchUsers","assignProject","post","handleProjectAction","projectId","action","put","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","map","user","name","_id","onClick","length","project","style","border","padding","progress","status","score","_c","$RefreshReg$"],"sources":["/Users/yogeshthakur/Ionots/frontend/src/components/AdminDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst AdminDashboard = () => {\n    const [projects, setProjects] = useState([]);\n    const [users, setUsers] = useState([]);\n    const [newProject, setNewProject] = useState({\n        title: '',\n        description: '',\n        candidateName: '',\n    });\n\n    // Fetch all candidate projects\n    const fetchProjects = async () => {\n        try {\n            const response = await axios.get('http://localhost:5005/api/projects/candidates');\n            setProjects(response.data);\n        } catch (error) {\n            console.error('Error fetching projects:', error);\n        }\n    };\n\n    // Fetch all registered users\n    const fetchUsers = async () => {\n        try {\n            const response = await axios.get('http://localhost:5005/api/auth/users');  \n            setUsers(response.data);\n        } catch (error) {\n            console.error('Error fetching users:', error);\n        }\n    };\n\n    useEffect(() => {\n        fetchProjects();\n        fetchUsers();  \n    }, []);\n\n    // Assign a project\n    const assignProject = async () => {\n        try {\n            await axios.post('http://localhost:5005/api/projects/assign', newProject);\n            setNewProject({ title: '', description: '', candidateName: '' });\n            fetchProjects();  \n        } catch (error) {\n            console.error('Error assigning project:', error);\n        }\n    };\n\n    // Handle project acceptance or decline\n    const handleProjectAction = async (projectId, action) => {\n        try {\n            if (action === 'accept') {\n                await axios.put(`http://localhost:5005/api/projects/${projectId}/accept`);\n            } else if (action === 'decline') {\n                await axios.put(`http://localhost:5005/api/projects/${projectId}/decline`);\n            }\n            fetchProjects();  // Refresh project list\n        } catch (error) {\n            console.error('Error handling project action:', error);\n        }\n    };\n\n    return (\n        <div>\n            <h1>Admin Dashboard</h1>\n\n            {/* Assign Project Form */}\n            <div>\n                <h2>Assign a Project</h2>\n                <input\n                    type=\"text\"\n                    placeholder=\"Project Title\"\n                    value={newProject.title}\n                    onChange={(e) => setNewProject({ ...newProject, title: e.target.value })}\n                />\n                <input\n                    type=\"text\"\n                    placeholder=\"Project Description\"\n                    value={newProject.description}\n                    onChange={(e) => setNewProject({ ...newProject, description: e.target.value })}\n                />\n                <select\n                    value={newProject.candidateName}\n                    onChange={(e) => setNewProject({ ...newProject, candidateName: e.target.value })}\n                >\n                    <option value=\"\">Select Candidate</option>\n                    {users.map((user) => (\n                        <option key={user._id} value={user.name}>\n                            {user.name}\n                        </option>\n                    ))}\n                </select>\n\n                <button onClick={assignProject}>Assign Project</button>\n            </div>\n\n            {/* Display Candidate Projects */}\n            <div>\n                <h2>Candidate Projects</h2>\n                {projects.length === 0 ? (\n                    <p>No projects assigned yet</p>\n                ) : (\n                    projects.map((project) => (\n                        <div key={project._id} style={{ border: '1px solid gray', padding: '10px' }}>\n                            <h3>{project.title} (Assigned to: {project.candidateName})</h3>\n                            <p>Description: {project.description}</p>\n                            <p>Progress: {project.progress}%</p>\n                            <p>Status: {project.status}</p>\n                            <p>Score: {project.score}</p>\n                            <div>\n                                {project.status === \"Pending\" && (\n                                    <>\n                                        <button onClick={() => handleProjectAction(project._id, 'accept')}>Accept</button>\n                                        <button onClick={() => handleProjectAction(project._id, 'decline')}>Decline</button>\n                                    </>\n                                )}\n                            </div>\n                        </div>\n                    ))\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default AdminDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}