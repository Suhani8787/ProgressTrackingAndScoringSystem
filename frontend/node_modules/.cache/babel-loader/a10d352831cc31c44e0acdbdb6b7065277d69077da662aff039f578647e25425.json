{"ast":null,"code":"var _jsxFileName = \"/Users/yogeshthakur/Ionots/frontend/src/components/AdminDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminDashboard = () => {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [newProject, setNewProject] = useState({\n    title: '',\n    description: '',\n    candidateName: ''\n  });\n\n  // Fetch all candidate projects\n  const fetchProjects = async () => {\n    try {\n      const response = await axios.get('http://localhost:5005/api/projects/candidates');\n      setProjects(response.data);\n    } catch (error) {\n      console.error('Error fetching projects:', error);\n    }\n  };\n\n  // Fetch all registered users\n  const fetchUsers = async () => {\n    try {\n      const response = await axios.get('http://localhost:5005/api/auth/users');\n      setUsers(response.data);\n    } catch (error) {\n      console.error('Error fetching users:', error);\n    }\n  };\n  useEffect(() => {\n    fetchProjects();\n    fetchUsers();\n  }, []);\n\n  // Assign a project\n  const assignProject = async () => {\n    try {\n      await axios.post('http://localhost:5005/api/projects/assign', newProject);\n      setNewProject({\n        title: '',\n        description: '',\n        candidateName: ''\n      });\n      fetchProjects();\n    } catch (error) {\n      console.error('Error assigning project:', error);\n    }\n  };\n\n  // Handle project acceptance or decline\n  const handleProjectStatus = async (projectId, action) => {\n    try {\n      const url = `http://localhost:5005/api/projects/${projectId}/${action}`;\n      const response = await axios.put(url);\n      fetchProjects(); // Refresh project list\n    } catch (error) {\n      console.error(`Error ${action} project:`, error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Assign a Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Project Title\",\n        value: newProject.title,\n        onChange: e => setNewProject({\n          ...newProject,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Project Description\",\n        value: newProject.description,\n        onChange: e => setNewProject({\n          ...newProject,\n          description: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: newProject.candidateName,\n        onChange: e => setNewProject({\n          ...newProject,\n          candidateName: e.target.value\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Candidate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), users.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: user.name,\n          children: user.name\n        }, user._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: assignProject,\n        children: \"Assign Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Assigned Projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), projects.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No projects assigned yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }, this) : projects.map(project => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: '1px solid gray',\n          padding: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [project.title, \" (Assigned to: \", project.candidateName, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Description: \", project.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Progress: \", project.progress, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Status: \", project.status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Score: \", project.score]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 29\n        }, this), project.status === 'Pending' && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleProjectStatus(project._id, 'accept'),\n            children: \"Accept\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleProjectStatus(project._id, 'decline'),\n            children: \"Decline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 33\n        }, this)]\n      }, project._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 25\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n_s(AdminDashboard, \"xfnkcbAQJWLiW3ITPyYMz5tGDDU=\");\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","AdminDashboard","_s","projects","setProjects","users","setUsers","newProject","setNewProject","title","description","candidateName","fetchProjects","response","get","data","error","console","fetchUsers","assignProject","post","handleProjectStatus","projectId","action","url","put","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","map","user","name","_id","onClick","length","project","style","border","padding","progress","status","score","_c","$RefreshReg$"],"sources":["/Users/yogeshthakur/Ionots/frontend/src/components/AdminDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst AdminDashboard = () => {\n    const [projects, setProjects] = useState([]);\n    const [users, setUsers] = useState([]);\n    const [newProject, setNewProject] = useState({\n        title: '',\n        description: '',\n        candidateName: '',\n    });\n\n    // Fetch all candidate projects\n    const fetchProjects = async () => {\n        try {\n            const response = await axios.get('http://localhost:5005/api/projects/candidates');\n            setProjects(response.data);\n        } catch (error) {\n            console.error('Error fetching projects:', error);\n        }\n    };\n\n    // Fetch all registered users\n    const fetchUsers = async () => {\n        try {\n            const response = await axios.get('http://localhost:5005/api/auth/users');\n            setUsers(response.data);\n        } catch (error) {\n            console.error('Error fetching users:', error);\n        }\n    };\n\n    useEffect(() => {\n        fetchProjects();\n        fetchUsers();\n    }, []);\n\n    // Assign a project\n    const assignProject = async () => {\n        try {\n            await axios.post('http://localhost:5005/api/projects/assign', newProject);\n            setNewProject({ title: '', description: '', candidateName: '' });\n            fetchProjects();\n        } catch (error) {\n            console.error('Error assigning project:', error);\n        }\n    };\n\n    // Handle project acceptance or decline\n    const handleProjectStatus = async (projectId, action) => {\n        try {\n            const url = `http://localhost:5005/api/projects/${projectId}/${action}`;\n            const response = await axios.put(url);\n            fetchProjects(); // Refresh project list\n        } catch (error) {\n            console.error(`Error ${action} project:`, error);\n        }\n    };\n\n    return (\n        <div>\n            <h1>Admin Dashboard</h1>\n\n            {/* Assign Project Form */}\n            <div>\n                <h2>Assign a Project</h2>\n                <input\n                    type=\"text\"\n                    placeholder=\"Project Title\"\n                    value={newProject.title}\n                    onChange={(e) => setNewProject({ ...newProject, title: e.target.value })}\n                />\n                <input\n                    type=\"text\"\n                    placeholder=\"Project Description\"\n                    value={newProject.description}\n                    onChange={(e) => setNewProject({ ...newProject, description: e.target.value })}\n                />\n                <select\n                    value={newProject.candidateName}\n                    onChange={(e) => setNewProject({ ...newProject, candidateName: e.target.value })}\n                >\n                    <option value=\"\">Select Candidate</option>\n                    {users.map((user) => (\n                        <option key={user._id} value={user.name}>\n                            {user.name}\n                        </option>\n                    ))}\n                </select>\n                <button onClick={assignProject}>Assign Project</button>\n            </div>\n\n            {/* Display Candidate Projects */}\n            <div>\n                <h2>Assigned Projects</h2>\n                {projects.length === 0 ? (\n                    <p>No projects assigned yet</p>\n                ) : (\n                    projects.map((project) => (\n                        <div key={project._id} style={{ border: '1px solid gray', padding: '10px' }}>\n                            <h3>{project.title} (Assigned to: {project.candidateName})</h3>\n                            <p>Description: {project.description}</p>\n                            <p>Progress: {project.progress}%</p>\n                            <p>Status: {project.status}</p>\n                            <p>Score: {project.score}</p>\n\n                            {/* Admin's Accept/Decline buttons */}\n                            {project.status === 'Pending' && (\n                                <div>\n                                    <button onClick={() => handleProjectStatus(project._id, 'accept')}>Accept</button>\n                                    <button onClick={() => handleProjectStatus(project._id, 'decline')}>Decline</button>\n                                </div>\n                            )}\n                        </div>\n                    ))\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default AdminDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}