{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n\n// const CandidateDashboard = () => {\n//     const [projects, setProjects] = useState([]);\n//     const [candidateName, setCandidateName] = useState(\"Name1\"); // Static candidate name for now\n//     const [progress, setProgress] = useState({});\n\n//     // Fetch projects assigned to the candidate\n//     useEffect(() => {\n//         const fetchProjects = async () => {\n//             try {\n//                 const response = await axios.get(`http://localhost:5005/api/projects/${candidateName}`);\n//                 setProjects(response.data);\n//             } catch (err) {\n//                 console.error(\"Error fetching projects:\", err);\n//             }\n//         };\n\n//         fetchProjects();\n//     }, [candidateName]);\n\n//     // Handle progress update\n//     const handleProgressUpdate = async (projectId) => {\n//         const newProgress = progress[projectId] || 0;\n\n//         try {\n//             const response = await axios.put(`http://localhost:5005/api/projects/${projectId}`, {\n//                 progress: parseInt(newProgress),\n//             });\n//             alert(\"Progress updated successfully!\");\n//             setProjects((prevProjects) =>\n//                 prevProjects.map((project) =>\n//                     project._id === projectId ? response.data : project\n//                 )\n//             );\n//         } catch (err) {\n//             console.error(\"Error updating progress:\", err);\n//         }\n//     };\n\n//     return (\n//         <div>\n//             <h1>Candidate Dashboard</h1>\n//             <h2>Welcome, {candidateName}</h2>\n\n//             {projects.length > 0 ? (\n//                 projects.map((project) => (\n//                     <div key={project._id} style={{ border: \"1px solid gray\", margin: \"10px\", padding: \"10px\" }}>\n//                         <h3>{project.title}</h3>\n//                         <p><strong>Description:</strong> {project.description}</p>\n//                         <p><strong>Progress:</strong> {project.progress}%</p>\n//                         <p><strong>Status:</strong> {project.status}</p>\n//                         <p><strong>Score:</strong> {project.score}</p>\n\n//                         <div>\n//                             <input\n//                                 type=\"number\"\n//                                 placeholder=\"Update Progress (0-100)\"\n//                                 value={progress[project._id] || \"\"}\n//                                 onChange={(e) =>\n//                                     setProgress({ ...progress, [project._id]: e.target.value })\n//                                 }\n//                                 min=\"0\"\n//                                 max=\"100\"\n//                             />\n//                             <button onClick={() => handleProgressUpdate(project._id)}>\n//                                 Update Progress\n//                             </button>\n//                         </div>\n//                     </div>\n//                 ))\n//             ) : (\n//                 <p>No projects assigned to you.</p>\n//             )}\n//         </div>\n//     );\n// };\n\n// export default CandidateDashboard;\n\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import { useNavigate } from \"react-router-dom\";\n\n// const CandidateDashboard = () => {\n//     const [projects, setProjects] = useState([]);\n//     const navigate = useNavigate();\n\n//     const candidateName = localStorage.getItem(\"candidateName\");\n\n//     // Redirect if not logged in\n//     useEffect(() => {\n//         if (!candidateName) {\n//             navigate(\"/login\");\n//         }\n//     }, [navigate, candidateName]);\n\n//     useEffect(() => {\n//         const fetchProjects = async () => {\n//             try {\n//                 const response = await axios.get(`http://localhost:5005/api/projects/${candidateName}`);\n//                 setProjects(response.data);\n//             } catch (err) {\n//                 console.error(\"Error fetching projects:\", err);\n//             }\n//         };\n\n//         fetchProjects();\n//     }, [candidateName]);\n\n//     return (\n//         <div>\n//             <h1>Welcome, {candidateName}</h1>\n//             {projects.map((project) => (\n//                 <div key={project._id}>\n//                     <h3>{project.title}</h3>\n//                     <p>Description: {project.description}</p>\n//                     <p>Progress: {project.progress}%</p>\n//                 </div>\n//             ))}\n//         </div>\n//     );\n// };\n\n// export default CandidateDashboard;","map":{"version":3,"names":[],"sources":["/Users/yogeshthakur/Ionots/frontend/src/components/CandidateDashboard.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n\n// const CandidateDashboard = () => {\n//     const [projects, setProjects] = useState([]);\n//     const [candidateName, setCandidateName] = useState(\"Name1\"); // Static candidate name for now\n//     const [progress, setProgress] = useState({});\n\n//     // Fetch projects assigned to the candidate\n//     useEffect(() => {\n//         const fetchProjects = async () => {\n//             try {\n//                 const response = await axios.get(`http://localhost:5005/api/projects/${candidateName}`);\n//                 setProjects(response.data);\n//             } catch (err) {\n//                 console.error(\"Error fetching projects:\", err);\n//             }\n//         };\n\n//         fetchProjects();\n//     }, [candidateName]);\n\n//     // Handle progress update\n//     const handleProgressUpdate = async (projectId) => {\n//         const newProgress = progress[projectId] || 0;\n\n//         try {\n//             const response = await axios.put(`http://localhost:5005/api/projects/${projectId}`, {\n//                 progress: parseInt(newProgress),\n//             });\n//             alert(\"Progress updated successfully!\");\n//             setProjects((prevProjects) =>\n//                 prevProjects.map((project) =>\n//                     project._id === projectId ? response.data : project\n//                 )\n//             );\n//         } catch (err) {\n//             console.error(\"Error updating progress:\", err);\n//         }\n//     };\n\n//     return (\n//         <div>\n//             <h1>Candidate Dashboard</h1>\n//             <h2>Welcome, {candidateName}</h2>\n\n//             {projects.length > 0 ? (\n//                 projects.map((project) => (\n//                     <div key={project._id} style={{ border: \"1px solid gray\", margin: \"10px\", padding: \"10px\" }}>\n//                         <h3>{project.title}</h3>\n//                         <p><strong>Description:</strong> {project.description}</p>\n//                         <p><strong>Progress:</strong> {project.progress}%</p>\n//                         <p><strong>Status:</strong> {project.status}</p>\n//                         <p><strong>Score:</strong> {project.score}</p>\n\n//                         <div>\n//                             <input\n//                                 type=\"number\"\n//                                 placeholder=\"Update Progress (0-100)\"\n//                                 value={progress[project._id] || \"\"}\n//                                 onChange={(e) =>\n//                                     setProgress({ ...progress, [project._id]: e.target.value })\n//                                 }\n//                                 min=\"0\"\n//                                 max=\"100\"\n//                             />\n//                             <button onClick={() => handleProgressUpdate(project._id)}>\n//                                 Update Progress\n//                             </button>\n//                         </div>\n//                     </div>\n//                 ))\n//             ) : (\n//                 <p>No projects assigned to you.</p>\n//             )}\n//         </div>\n//     );\n// };\n\n// export default CandidateDashboard;\n\n\n\n\n\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import { useNavigate } from \"react-router-dom\";\n\n// const CandidateDashboard = () => {\n//     const [projects, setProjects] = useState([]);\n//     const navigate = useNavigate();\n\n//     const candidateName = localStorage.getItem(\"candidateName\");\n\n//     // Redirect if not logged in\n//     useEffect(() => {\n//         if (!candidateName) {\n//             navigate(\"/login\");\n//         }\n//     }, [navigate, candidateName]);\n\n//     useEffect(() => {\n//         const fetchProjects = async () => {\n//             try {\n//                 const response = await axios.get(`http://localhost:5005/api/projects/${candidateName}`);\n//                 setProjects(response.data);\n//             } catch (err) {\n//                 console.error(\"Error fetching projects:\", err);\n//             }\n//         };\n\n//         fetchProjects();\n//     }, [candidateName]);\n\n//     return (\n//         <div>\n//             <h1>Welcome, {candidateName}</h1>\n//             {projects.map((project) => (\n//                 <div key={project._id}>\n//                     <h3>{project.title}</h3>\n//                     <p>Description: {project.description}</p>\n//                     <p>Progress: {project.progress}%</p>\n//                 </div>\n//             ))}\n//         </div>\n//     );\n// };\n\n// export default CandidateDashboard;"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAMA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}