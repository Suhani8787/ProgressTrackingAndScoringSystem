{"ast":null,"code":"// import React, { useState } from 'react';\n// import axios from 'axios';\n// import { useNavigate } from 'react-router-dom';\n\n// const Login = () => {\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [error, setError] = useState('');\n//   const navigate = useNavigate();\n\n//   // Handle form submission\n//   const handleLogin = async (e) => {\n//     e.preventDefault();\n\n//     try {\n//       // Send POST request to backend for login\n//       const response = await axios.post('http://localhost:5005/api/auth/login', {\n//         email,\n//         password,\n//       });\n\n//       // Log the response to see the token and name\n//       console.log(\"Login Response:\", response.data);\n\n//       // Save token and name in localStorage only if login is successful\n//       localStorage.setItem('token', response.data.token);\n//       localStorage.setItem('candidateName', response.data.name);\n\n//       // Redirect to candidate dashboard\n//       navigate('/candidate');\n//     } catch (err) {\n//       setError('Invalid credentials. Please try again.');\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>Candidate Login</h2>\n//       {error && <p style={{ color: 'red' }}>{error}</p>}\n//       <form onSubmit={handleLogin}>\n//         <input\n//           type=\"email\"\n//           placeholder=\"Email\"\n//           value={email}\n//           onChange={(e) => setEmail(e.target.value)}\n//           required\n//         />\n//         <input\n//           type=\"password\"\n//           placeholder=\"Password\"\n//           value={password}\n//           onChange={(e) => setPassword(e.target.value)}\n//           required\n//         />\n//         <button type=\"submit\">Login</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default Login;","map":{"version":3,"names":[],"sources":["/Users/yogeshthakur/Ionots/frontend/src/components/Login.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import axios from 'axios';\n// import { useNavigate } from 'react-router-dom';\n\n// const Login = () => {\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [error, setError] = useState('');\n//   const navigate = useNavigate();\n\n//   // Handle form submission\n//   const handleLogin = async (e) => {\n//     e.preventDefault();\n\n//     try {\n//       // Send POST request to backend for login\n//       const response = await axios.post('http://localhost:5005/api/auth/login', {\n//         email,\n//         password,\n//       });\n\n//       // Log the response to see the token and name\n//       console.log(\"Login Response:\", response.data);\n\n//       // Save token and name in localStorage only if login is successful\n//       localStorage.setItem('token', response.data.token);\n//       localStorage.setItem('candidateName', response.data.name);\n\n//       // Redirect to candidate dashboard\n//       navigate('/candidate');\n//     } catch (err) {\n//       setError('Invalid credentials. Please try again.');\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>Candidate Login</h2>\n//       {error && <p style={{ color: 'red' }}>{error}</p>}\n//       <form onSubmit={handleLogin}>\n//         <input\n//           type=\"email\"\n//           placeholder=\"Email\"\n//           value={email}\n//           onChange={(e) => setEmail(e.target.value)}\n//           required\n//         />\n//         <input\n//           type=\"password\"\n//           placeholder=\"Password\"\n//           value={password}\n//           onChange={(e) => setPassword(e.target.value)}\n//           required\n//         />\n//         <button type=\"submit\">Login</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default Login;"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}