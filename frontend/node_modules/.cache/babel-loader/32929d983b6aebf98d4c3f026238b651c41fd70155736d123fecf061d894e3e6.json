{"ast":null,"code":"var _jsxFileName = \"/Users/yogeshthakur/Ionots/frontend/src/components/CandidateDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CandidateDashboard = () => {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [candidateName, setCandidateName] = useState(\"Name1\"); // Static candidate name for now\n  const [progress, setProgress] = useState({});\n\n  // Fetch projects assigned to the candidate\n  useEffect(() => {\n    const fetchProjects = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5005/api/projects/${candidateName}`);\n        setProjects(response.data);\n      } catch (err) {\n        console.error(\"Error fetching projects:\", err);\n      }\n    };\n    fetchProjects();\n  }, [candidateName]);\n\n  // Handle progress update\n  const handleProgressUpdate = async projectId => {\n    const newProgress = progress[projectId] || 0;\n    try {\n      const response = await axios.put(`http://localhost:5005/api/projects/${projectId}`, {\n        progress: parseInt(newProgress)\n      });\n      alert(\"Progress updated successfully!\");\n      setProjects(prevProjects => prevProjects.map(project => project._id === projectId ? response.data : project));\n    } catch (err) {\n      console.error(\"Error updating progress:\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Candidate Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Welcome, \", candidateName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), projects.length > 0 ? projects.map(project => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: \"1px solid gray\",\n        margin: \"10px\",\n        padding: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: project.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 28\n        }, this), \" \", project.description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Progress:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 28\n        }, this), \" \", project.progress, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Status:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 28\n        }, this), \" \", project.status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Score:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 28\n        }, this), \" \", project.score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"Update Progress (0-100)\",\n          value: progress[project._id] || \"\",\n          onChange: e => setProgress({\n            ...progress,\n            [project._id]: e.target.value\n          }),\n          min: \"0\",\n          max: \"100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleProgressUpdate(project._id),\n          children: \"Update Progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }, this)]\n    }, project._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No projects assigned to you.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(CandidateDashboard, \"DUM0pQ4lwRnQMY4bZRWTLGZzpUI=\");\n_c = CandidateDashboard;\nexport default CandidateDashboard;\n\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import { useNavigate } from \"react-router-dom\";\n\n// const CandidateDashboard = () => {\n//     const [projects, setProjects] = useState([]);\n//     const navigate = useNavigate();\n\n//     const candidateName = localStorage.getItem(\"candidateName\");\n\n//     // Redirect if not logged in\n//     useEffect(() => {\n//         if (!candidateName) {\n//             navigate(\"/login\");\n//         }\n//     }, [navigate, candidateName]);\n\n//     useEffect(() => {\n//         const fetchProjects = async () => {\n//             try {\n//                 const response = await axios.get(`http://localhost:5005/api/projects/${candidateName}`);\n//                 setProjects(response.data);\n//             } catch (err) {\n//                 console.error(\"Error fetching projects:\", err);\n//             }\n//         };\n\n//         fetchProjects();\n//     }, [candidateName]);\n\n//     return (\n//         <div>\n//             <h1>Welcome, {candidateName}</h1>\n//             {projects.map((project) => (\n//                 <div key={project._id}>\n//                     <h3>{project.title}</h3>\n//                     <p>Description: {project.description}</p>\n//                     <p>Progress: {project.progress}%</p>\n//                 </div>\n//             ))}\n//         </div>\n//     );\n// };\n\n// export default CandidateDashboard;\nvar _c;\n$RefreshReg$(_c, \"CandidateDashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","CandidateDashboard","_s","projects","setProjects","candidateName","setCandidateName","progress","setProgress","fetchProjects","response","get","data","err","console","error","handleProgressUpdate","projectId","newProgress","put","parseInt","alert","prevProjects","map","project","_id","children","fileName","_jsxFileName","lineNumber","columnNumber","length","style","border","margin","padding","title","description","status","score","type","placeholder","value","onChange","e","target","min","max","onClick","_c","$RefreshReg$"],"sources":["/Users/yogeshthakur/Ionots/frontend/src/components/CandidateDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst CandidateDashboard = () => {\n    const [projects, setProjects] = useState([]);\n    const [candidateName, setCandidateName] = useState(\"Name1\"); // Static candidate name for now\n    const [progress, setProgress] = useState({});\n\n    // Fetch projects assigned to the candidate\n    useEffect(() => {\n        const fetchProjects = async () => {\n            try {\n                const response = await axios.get(`http://localhost:5005/api/projects/${candidateName}`);\n                setProjects(response.data);\n            } catch (err) {\n                console.error(\"Error fetching projects:\", err);\n            }\n        };\n\n        fetchProjects();\n    }, [candidateName]);\n\n    // Handle progress update\n    const handleProgressUpdate = async (projectId) => {\n        const newProgress = progress[projectId] || 0;\n\n        try {\n            const response = await axios.put(`http://localhost:5005/api/projects/${projectId}`, {\n                progress: parseInt(newProgress),\n            });\n            alert(\"Progress updated successfully!\");\n            setProjects((prevProjects) =>\n                prevProjects.map((project) =>\n                    project._id === projectId ? response.data : project\n                )\n            );\n        } catch (err) {\n            console.error(\"Error updating progress:\", err);\n        }\n    };\n\n    return (\n        <div>\n            <h1>Candidate Dashboard</h1>\n            <h2>Welcome, {candidateName}</h2>\n\n            {projects.length > 0 ? (\n                projects.map((project) => (\n                    <div key={project._id} style={{ border: \"1px solid gray\", margin: \"10px\", padding: \"10px\" }}>\n                        <h3>{project.title}</h3>\n                        <p><strong>Description:</strong> {project.description}</p>\n                        <p><strong>Progress:</strong> {project.progress}%</p>\n                        <p><strong>Status:</strong> {project.status}</p>\n                        <p><strong>Score:</strong> {project.score}</p>\n\n                        <div>\n                            <input\n                                type=\"number\"\n                                placeholder=\"Update Progress (0-100)\"\n                                value={progress[project._id] || \"\"}\n                                onChange={(e) =>\n                                    setProgress({ ...progress, [project._id]: e.target.value })\n                                }\n                                min=\"0\"\n                                max=\"100\"\n                            />\n                            <button onClick={() => handleProgressUpdate(project._id)}>\n                                Update Progress\n                            </button>\n                        </div>\n                    </div>\n                ))\n            ) : (\n                <p>No projects assigned to you.</p>\n            )}\n        </div>\n    );\n};\n\nexport default CandidateDashboard;\n\n\n\n\n\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import { useNavigate } from \"react-router-dom\";\n\n// const CandidateDashboard = () => {\n//     const [projects, setProjects] = useState([]);\n//     const navigate = useNavigate();\n\n//     const candidateName = localStorage.getItem(\"candidateName\");\n\n//     // Redirect if not logged in\n//     useEffect(() => {\n//         if (!candidateName) {\n//             navigate(\"/login\");\n//         }\n//     }, [navigate, candidateName]);\n\n//     useEffect(() => {\n//         const fetchProjects = async () => {\n//             try {\n//                 const response = await axios.get(`http://localhost:5005/api/projects/${candidateName}`);\n//                 setProjects(response.data);\n//             } catch (err) {\n//                 console.error(\"Error fetching projects:\", err);\n//             }\n//         };\n\n//         fetchProjects();\n//     }, [candidateName]);\n\n//     return (\n//         <div>\n//             <h1>Welcome, {candidateName}</h1>\n//             {projects.map((project) => (\n//                 <div key={project._id}>\n//                     <h3>{project.title}</h3>\n//                     <p>Description: {project.description}</p>\n//                     <p>Progress: {project.progress}%</p>\n//                 </div>\n//             ))}\n//         </div>\n//     );\n// };\n\n// export default CandidateDashboard;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;EAC7D,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAE5C;EACAC,SAAS,CAAC,MAAM;IACZ,MAAMY,aAAa,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,sCAAsCN,aAAa,EAAE,CAAC;QACvFD,WAAW,CAACM,QAAQ,CAACE,IAAI,CAAC;MAC9B,CAAC,CAAC,OAAOC,GAAG,EAAE;QACVC,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEF,GAAG,CAAC;MAClD;IACJ,CAAC;IAEDJ,aAAa,CAAC,CAAC;EACnB,CAAC,EAAE,CAACJ,aAAa,CAAC,CAAC;;EAEnB;EACA,MAAMW,oBAAoB,GAAG,MAAOC,SAAS,IAAK;IAC9C,MAAMC,WAAW,GAAGX,QAAQ,CAACU,SAAS,CAAC,IAAI,CAAC;IAE5C,IAAI;MACA,MAAMP,QAAQ,GAAG,MAAMZ,KAAK,CAACqB,GAAG,CAAC,sCAAsCF,SAAS,EAAE,EAAE;QAChFV,QAAQ,EAAEa,QAAQ,CAACF,WAAW;MAClC,CAAC,CAAC;MACFG,KAAK,CAAC,gCAAgC,CAAC;MACvCjB,WAAW,CAAEkB,YAAY,IACrBA,YAAY,CAACC,GAAG,CAAEC,OAAO,IACrBA,OAAO,CAACC,GAAG,KAAKR,SAAS,GAAGP,QAAQ,CAACE,IAAI,GAAGY,OAChD,CACJ,CAAC;IACL,CAAC,CAAC,OAAOX,GAAG,EAAE;MACVC,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEF,GAAG,CAAC;IAClD;EACJ,CAAC;EAED,oBACIb,OAAA;IAAA0B,QAAA,gBACI1B,OAAA;MAAA0B,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5B9B,OAAA;MAAA0B,QAAA,GAAI,WAAS,EAACrB,aAAa;IAAA;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EAEhC3B,QAAQ,CAAC4B,MAAM,GAAG,CAAC,GAChB5B,QAAQ,CAACoB,GAAG,CAAEC,OAAO,iBACjBxB,OAAA;MAAuBgC,KAAK,EAAE;QAAEC,MAAM,EAAE,gBAAgB;QAAEC,MAAM,EAAE,MAAM;QAAEC,OAAO,EAAE;MAAO,CAAE;MAAAT,QAAA,gBACxF1B,OAAA;QAAA0B,QAAA,EAAKF,OAAO,CAACY;MAAK;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACxB9B,OAAA;QAAA0B,QAAA,gBAAG1B,OAAA;UAAA0B,QAAA,EAAQ;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACN,OAAO,CAACa,WAAW;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1D9B,OAAA;QAAA0B,QAAA,gBAAG1B,OAAA;UAAA0B,QAAA,EAAQ;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACN,OAAO,CAACjB,QAAQ,EAAC,GAAC;MAAA;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACrD9B,OAAA;QAAA0B,QAAA,gBAAG1B,OAAA;UAAA0B,QAAA,EAAQ;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACN,OAAO,CAACc,MAAM;MAAA;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChD9B,OAAA;QAAA0B,QAAA,gBAAG1B,OAAA;UAAA0B,QAAA,EAAQ;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACN,OAAO,CAACe,KAAK;MAAA;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAE9C9B,OAAA;QAAA0B,QAAA,gBACI1B,OAAA;UACIwC,IAAI,EAAC,QAAQ;UACbC,WAAW,EAAC,yBAAyB;UACrCC,KAAK,EAAEnC,QAAQ,CAACiB,OAAO,CAACC,GAAG,CAAC,IAAI,EAAG;UACnCkB,QAAQ,EAAGC,CAAC,IACRpC,WAAW,CAAC;YAAE,GAAGD,QAAQ;YAAE,CAACiB,OAAO,CAACC,GAAG,GAAGmB,CAAC,CAACC,MAAM,CAACH;UAAM,CAAC,CAC7D;UACDI,GAAG,EAAC,GAAG;UACPC,GAAG,EAAC;QAAK;UAAApB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACZ,CAAC,eACF9B,OAAA;UAAQgD,OAAO,EAAEA,CAAA,KAAMhC,oBAAoB,CAACQ,OAAO,CAACC,GAAG,CAAE;UAAAC,QAAA,EAAC;QAE1D;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC;IAAA,GArBAN,OAAO,CAACC,GAAG;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAsBhB,CACR,CAAC,gBAEF9B,OAAA;MAAA0B,QAAA,EAAG;IAA4B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACrC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAC5B,EAAA,CA1EID,kBAAkB;AAAAgD,EAAA,GAAlBhD,kBAAkB;AA4ExB,eAAeA,kBAAkB;;AAMjC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}