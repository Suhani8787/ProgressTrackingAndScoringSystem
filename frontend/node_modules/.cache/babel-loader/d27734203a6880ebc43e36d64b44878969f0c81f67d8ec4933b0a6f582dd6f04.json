{"ast":null,"code":"var _jsxFileName = \"/Users/yogeshthakur/Ionots/frontend/src/components/ProjectList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getProjects } from '../services/projectService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProjectList() {\n  _s();\n  const [projects, setProjects] = useState([]);\n  useEffect(() => {\n    fetchProjects();\n  }, []);\n  const fetchProjects = async () => {\n    try {\n      const response = await getProjects();\n      setProjects(response.data);\n    } catch (error) {\n      console.error(\"Error fetching projects:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Project List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: projects.map(project => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [project.title, \" - \", project.status, \" - Progress: \", project.progress, \"%\"]\n      }, project._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n_s(ProjectList, \"TSrpuQX6QU8EgjQSxaAzj2u9i4o=\");\n_c = ProjectList;\nexport default ProjectList;\nvar _c;\n$RefreshReg$(_c, \"ProjectList\");","map":{"version":3,"names":["React","useEffect","useState","getProjects","jsxDEV","_jsxDEV","ProjectList","_s","projects","setProjects","fetchProjects","response","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","project","title","status","progress","_id","_c","$RefreshReg$"],"sources":["/Users/yogeshthakur/Ionots/frontend/src/components/ProjectList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { getProjects } from '../services/projectService';\n\nfunction ProjectList() {\n    const [projects, setProjects] = useState([]);\n\n    useEffect(() => {\n        fetchProjects();\n    }, []);\n\n    const fetchProjects = async () => {\n        try {\n            const response = await getProjects();\n            setProjects(response.data);\n        } catch (error) {\n            console.error(\"Error fetching projects:\", error);\n        }\n    };\n\n    return (\n        <div>\n            <h2>Project List</h2>\n            <ul>\n                {projects.map(project => (\n                    <li key={project._id}>\n                        {project.title} - {project.status} - Progress: {project.progress}%\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n}\n\nexport default ProjectList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACZS,aAAa,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMR,WAAW,CAAC,CAAC;MACpCM,WAAW,CAACE,QAAQ,CAACC,IAAI,CAAC;IAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IACpD;EACJ,CAAC;EAED,oBACIR,OAAA;IAAAU,QAAA,gBACIV,OAAA;MAAAU,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBd,OAAA;MAAAU,QAAA,EACKP,QAAQ,CAACY,GAAG,CAACC,OAAO,iBACjBhB,OAAA;QAAAU,QAAA,GACKM,OAAO,CAACC,KAAK,EAAC,KAAG,EAACD,OAAO,CAACE,MAAM,EAAC,eAAa,EAACF,OAAO,CAACG,QAAQ,EAAC,GACrE;MAAA,GAFSH,OAAO,CAACI,GAAG;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEhB,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd;AAACZ,EAAA,CA5BQD,WAAW;AAAAoB,EAAA,GAAXpB,WAAW;AA8BpB,eAAeA,WAAW;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}