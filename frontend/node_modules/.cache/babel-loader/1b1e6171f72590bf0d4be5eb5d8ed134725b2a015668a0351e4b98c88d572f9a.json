{"ast":null,"code":"var _jsxFileName = \"/Users/yogeshthakur/Ionots/frontend/src/components/ProjectList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProjectList = () => {\n  _s();\n  const [projects, setProjects] = useState([]);\n\n  // Fetch all projects\n  const fetchProjects = async () => {\n    try {\n      const response = await axios.get('http://localhost:5005/api/projects');\n      setProjects(response.data);\n    } catch (error) {\n      console.error(\"Error fetching projects:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchProjects();\n  }, []);\n\n  // Accept a project\n  const acceptProject = async id => {\n    try {\n      await axios.put(`http://localhost:5005/api/projects/${id}/accept`);\n      fetchProjects(); // Refresh list\n    } catch (error) {\n      console.error(\"Error accepting project:\", error);\n    }\n  };\n\n  // Update progress\n  const updateProgress = async (id, progress) => {\n    try {\n      await axios.put(`http://localhost:5005/api/projects/${id}`, {\n        progress\n      });\n      fetchProjects(); // Refresh list\n    } catch (error) {\n      console.error(\"Error updating progress:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Project Assignment List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), projects.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No projects available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: projects.map(project => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          marginBottom: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: project.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: project.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Status: \", project.status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Progress: \", project.progress, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Score: \", project.score]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 29\n        }, this), project.status === \"Pending\" && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => acceptProject(project._id),\n          children: \"Accept\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Update Progress: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: \"0\",\n            max: \"100\",\n            value: project.progress,\n            onChange: e => updateProgress(project._id, e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [project.progress, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 29\n        }, this)]\n      }, project._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(ProjectList, \"TSrpuQX6QU8EgjQSxaAzj2u9i4o=\");\n_c = ProjectList;\nexport default ProjectList;\nvar _c;\n$RefreshReg$(_c, \"ProjectList\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ProjectList","_s","projects","setProjects","fetchProjects","response","get","data","error","console","acceptProject","id","put","updateProgress","progress","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","project","style","marginBottom","title","description","status","score","onClick","_id","type","min","max","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/yogeshthakur/Ionots/frontend/src/components/ProjectList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst ProjectList = () => {\n    const [projects, setProjects] = useState([]);\n\n    // Fetch all projects\n    const fetchProjects = async () => {\n        try {\n            const response = await axios.get('http://localhost:5005/api/projects');\n            setProjects(response.data);\n        } catch (error) {\n            console.error(\"Error fetching projects:\", error);\n        }\n    };\n\n    useEffect(() => {\n        fetchProjects();\n    }, []);\n\n    // Accept a project\n    const acceptProject = async (id) => {\n        try {\n            await axios.put(`http://localhost:5005/api/projects/${id}/accept`);\n            fetchProjects(); // Refresh list\n        } catch (error) {\n            console.error(\"Error accepting project:\", error);\n        }\n    };\n\n    // Update progress\n    const updateProgress = async (id, progress) => {\n        try {\n            await axios.put(`http://localhost:5005/api/projects/${id}`, { progress });\n            fetchProjects(); // Refresh list\n        } catch (error) {\n            console.error(\"Error updating progress:\", error);\n        }\n    };\n\n    return (\n        <div>\n            <h1>Project Assignment List</h1>\n            {projects.length === 0 ? (\n                <p>No projects available</p>\n            ) : (\n                <ul>\n                    {projects.map(project => (\n                        <li key={project._id} style={{ marginBottom: '20px' }}>\n                            <h3>{project.title}</h3>\n                            <p>{project.description}</p>\n                            <p>Status: {project.status}</p>\n                            <p>Progress: {project.progress}%</p>\n                            <p>Score: {project.score}</p>\n                            \n                            {/* Accept Button */}\n                            {project.status === \"Pending\" && (\n                                <button onClick={() => acceptProject(project._id)}>Accept</button>\n                            )}\n\n                            {/* Progress Slider */}\n                            <div>\n                                <label>Update Progress: </label>\n                                <input\n                                    type=\"range\"\n                                    min=\"0\"\n                                    max=\"100\"\n                                    value={project.progress}\n                                    onChange={(e) => updateProgress(project._id, e.target.value)}\n                                />\n                                <span>{project.progress}%</span>\n                            </div>\n                        </li>\n                    ))}\n                </ul>\n            )}\n        </div>\n    );\n};\n\nexport default ProjectList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}